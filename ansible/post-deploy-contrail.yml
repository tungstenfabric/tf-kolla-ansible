---
- name: Post-deploy playbook for contrail
  hosts: control
  tasks:

  - name: Creating admin openrc file for kolla-toolbox
    template:
      src: "roles/common/templates/admin-openrc.sh.j2"
      dest: "{{ node_config_directory }}/kolla-toolbox/admin-openrc.sh"

  - name: Copy cacert into the kolla-toolbox nodes
    copy:
      src: "{{ kolla_external_fqdn_cacert }}"
      dest: "{{ node_config_directory }}/kolla-toolbox/haproxy-ca.crt"
    when:
      - kolla_enable_tls_external | bool

  - name: create openstack kolla external services directory
    file:
      path: "{{ node_config_directory }}/external/"
      state: directory
      recurse: yes

  - name: Creating admin openrc file for external services
    template:
      src: "roles/common/templates/admin-openrc.yml.j2"
      dest: "{{ node_config_directory }}/external/admin-openrc.yml"

  - name: Disable the nova-compute on the openstack container
    command: >
      docker exec kolla_toolbox openstack
      --os-interface internal
      --os-auth-url {{ keystone_admin_url }}
      --os-identity-api-version 3
      --os-project-domain-name default
      --os-tenant-name admin
      --os-username admin
      --os-password {{ keystone_admin_password }}
      --os-user-domain-name default
      compute service set  --disable {{ hostvars[item].ansible_hostname }} nova-compute
    when:
      - hostvars[item].TSN_EVPN_MODE is defined
      - hostvars[item]['TSN_EVPN_MODE'] | bool
    with_items: "{{ groups['compute'] if 'compute' in groups else [] }}"
    tags: always

  ## Need to create Host Aggregates to separate Baremetal and Virtual Hosts
  - name: Create Host Aggregates to separate types of hosts
    command: >
      docker exec kolla_toolbox openstack
      --os-interface internal
      --os-auth-url {{ keystone_admin_url }}
      --os-identity-api-version 3
      --os-project-domain-name default
      --os-tenant-name admin
      --os-username admin
      --os-password {{ keystone_admin_password }}
      --os-user-domain-name default
      aggregate create --property baremetal={{ item.0 }} --zone {{ item.1 }} {{ item.2 }}
    with_together:
      - ['true', 'false']
      - ['nova-baremetal', 'nova']
      - ['baremetal-hosts', 'virtual-hosts']
    register: command_result
    failed_when: "command_result.rc == 1 and 'already exists' not in command_result.stderr"
    run_once: yes
    when: enable_nova | bool
    no_log: True

  - name: Add compute hosts to virtual-hosts Aggregate Group
    command: >
      docker exec kolla_toolbox openstack
      --os-interface internal
      --os-auth-url {{ keystone_admin_url }}
      --os-identity-api-version 3
      --os-project-domain-name default
      --os-tenant-name admin
      --os-username admin
      --os-password {{ keystone_admin_password }}
      --os-user-domain-name default
      aggregate add host virtual-hosts {{ hostvars[item].ansible_hostname }}
    when:
      - hostvars[item].TSN_EVPN_MODE is defined
      - not hostvars[item]['TSN_EVPN_MODE'] | bool
      - enable_nova | bool
    register: command_result
    failed_when: "command_result.rc == 1 and 'already has host' not in command_result.stderr"
    with_items: "{{ groups['compute'] if 'compute' in groups else [] }}"
    run_once: yes

  - name: Add controller/Ironic hosts to baremetal-hosts Aggregate Group
    command: >
      docker exec kolla_toolbox openstack
      --os-interface internal
      --os-auth-url {{ keystone_admin_url }}
      --os-identity-api-version 3
      --os-project-domain-name default
      --os-tenant-name admin
      --os-username admin
      --os-password {{ keystone_admin_password }}
      --os-user-domain-name default
      aggregate add host baremetal-hosts {{ hostvars[item].ansible_hostname }}-ironic
    register: command_result
    with_items: "{{ groups['control'] }}"
    failed_when: "command_result.rc == 1 and 'already has host' not in command_result.stderr"
    when:
      - enable_ironic | bool
      - enable_nova | bool
    run_once: yes

  - name: Contrail default swift container and Temp-URL-Key creation
    shell: docker exec kolla_toolbox bash -c 'source /var/lib/kolla/config_files/admin-openrc.sh; swift post -r '.r:*' contrail_container; swift post -m "Temp-URL-Key:mykey"'
    when:
      - enable_swift_opencontrail | bool
      - enable_swift | bool
    run_once: yes
